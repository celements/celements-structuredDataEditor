<!-- SelectTagAutocompleteView -->
## tries to render option-tags from XWiki ListClass
## NOTE we cannot simply use XWiki's displayEdit here because it also renders the select-tag around it
#set($cellDocRef = $celldoc.getDocumentReference())
#set($supportedClasses = ['ListClass','StaticListClass','DBListClass','DBTreeListClass','UsersClass','GroupsClass','LevelsClass'])
#set($supportedDisplayTypes = ['select'])
#set($autoComplete = $services.structuredDataEditor.getSelectTagAutoCompleteImpl($cellDocRef).orElse($null))
#set($propClass = $services.structuredDataEditor.getCellPropertyClass($cellDocRef))
#if("$!autoComplete" != '')
  #set($jsService = $services.javascript)
  #set($extJsParamSync = $!jsService.createExtJSParam().setAction('file'))
  $!jsService.includeExtJsFile($extJsParamSync.setJsFile(':structEditJS/select2/select2.full.min.js'))##
  $!jsService.includeExtJsFile($extJsParamSync.setJsFile(':structEditJS/select2/i18n/de.js'))##
  $!jsService.includeExtJsFile($extJsParamSync.setJsFile(':structEditJS/select2/i18n/fr.js'))##
  $!jsService.includeExtJsFile($extJsParamSync.setJsFile(':structEditJS/select2/i18n/en.js'))##
  $!jsService.includeExtJsFile($extJsParamSync.setJsFile(':structEditJS/autocomplete.mjs'))##
  #if("$!autoComplete.jsFilePath" != '')
    $!jsService.includeExtJsFile($extJsParamSync.setJsFile(':${autoComplete.jsFilePath}'))##
  #end
  #set($currentDocRefValue = $autoComplete.getSelectedValue($cellDocRef).orElse($null))
  #if("$!currentDocRefValue" != '')
    #set($value = $services.model.serialize($currentDocRefValue, 'default'))
    <option selected="selected" value="$!xwiki.getFormEncoded($value)">
      $!autoComplete.displayNameForValue($currentDocRefValue, $cellDocRef)
    </option>
  #else
  <!-- currentDocRefValue is empty!! -->
  #end
#else
  #set($renderedContent = $services.celementsweb.renderDocument($cellDocRef))
  #if("$!renderedContent" != '')
    $renderedContent
  #elseif(!$propClass.isPresent())
    <!-- WARN SelectTagutocompleteView: no edit field defined on cell: $!celldoc -->
  #elseif(!$supportedClasses.contains($propClass.get().getType()))
    <!-- WARN SelectTagAutocompleteView: doesn't support edit field class: $!propClass.get().getType() -->
  #elseif(!$supportedDisplayTypes.contains($propClass.get().getProperty('displayType').getValue()))
    <!-- WARN SelectTagAutocompleteView: doesn't support display type: $!propClass.get().getProperty('displayType').getValue() -->
  #end
#end